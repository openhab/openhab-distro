#!/bin/bash

BUILD_LOG=build.log

ARGUMENTS="clean verify -B -T 1.5C -U"
if [ $# -ge 1 ]; then
    ARGUMENTS=$@
fi

function print_reactor_summary() {
    local start_end=$(grep -anE "\[INFO\] \\-{70,}" "$BUILD_LOG" | tail -n4 | cut -f1 -d: | sed -e 1b -e '$!d' | xargs)
    local start=$(awk '{print $1}' <<< $start_end)
    local end=$(awk '{print $2}' <<< $start_end)
    cat "$BUILD_LOG" | sed -n "${start},${end}p" | sed 's/\[INFO\] //'
}

function mvnp() {
    set -o pipefail # exit build with error when pipes fail
    local reactor_size=$(find -name "pom.xml" | grep -vE '/src/|/target/' | wc -l)
    local padding=$(bc -l <<< "scale=0;2*(l($reactor_size)/l(10)+1)")
    local command=(mvn $@)
    exec "${command[@]}" 2>&1 | # execute, redirect stderr to stdout
        tee "$BUILD_LOG" | # write output to log
        stdbuf -oL grep -aE '^\[INFO\] Building .+ \[.+\]$' | # filter progress
        stdbuf -o0 sed -uE 's/^\[INFO\] Building (.*[^ ])[ ]+\[([0-9]+\/[0-9]+)\]$/\2| \1/' | # prefix project name with progress
        stdbuf -o0 sed -e :a -e "s/^.\{1,${padding}\}|/ &/;ta" # right align progress with padding
}

function build_all() {
    echo
    echo "Building all projects"
    echo
    echo "+ mvn $ARGUMENTS"
    echo

    mvnp $ARGUMENTS

    status=$?
    echo

    if [ $status -eq 0 ]; then
        print_reactor_summary
    else
        tail -n 2000 "$BUILD_LOG"
    fi

    exit $status
}

mvn -v
build_all
